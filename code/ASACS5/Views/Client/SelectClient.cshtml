@model ASACS5.Models.Site.SelectClientViewModel
@using ASACS5.Models.Logs;
@using ASACS5.Models.Waitlists;
@{
    ViewBag.Title = "Update Client";
}

@if (Model.ClientID.Equals(0))
{
    <h1>Update Client</h1>
}
else
{
    <h1>Client ID @Model.ClientID</h1>
}

@using (Html.BeginForm("UpdateClient", "Client", FormMethod.Post, new { id = "frmSelectClient", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.SiteID)
    @Html.HiddenFor(model => model.ClientID)
    @Html.HiddenFor(model => model.oldDescriptiveID)
    @Html.HiddenFor(model => model.oldFirstName)
    @Html.HiddenFor(model => model.oldMiddleName)
    @Html.HiddenFor(model => model.oldLastName)
    @Html.HiddenFor(model => model.oldPhoneNumber)
    @Html.HiddenFor(model => model.Logs)
    @Html.HiddenFor(model => model.ShelterServiceName)
    @Html.HiddenFor(model => model.SoupKitchenServiceName)
    @Html.HiddenFor(model => model.FoodPantryServiceName)

    <h3 style='font-weight: bold;'>Details</h3>
    <div class="form-group">
        @Html.LabelFor(model => model.DescriptiveID, new { @class = "col-md-3", @for = "txtDescriptiveID" })
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.DescriptiveID, new { @class = "form-control", @id = "txtDescriptiveID" })
            @Html.ValidationMessageFor(model => model.DescriptiveID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, new { @class = "col-md-3", @for = "txtFirstName" })
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @id = "txtFirstName" })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MiddleName, new { @class = "col-md-3", @for = "txtMiddleName" })
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control", @id = "txtMiddleName" })
            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, new { @class = "col-md-3", @for = "txtLastName" })
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @id = "txtLastName" })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, new { @class = "col-md-3", @for = "txtPhoneNumber" })
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", @id = "txtPhoneNumber" })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    
    if (Model.Logs != null)
    {
        <br />
        <h3 style='font-weight: bold;'>Log</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>Date/Time Stamp</th>
                    <th>Service Name</th>
                    <th>Site Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>

                @foreach (Log log in Model.Logs)
                {
                    <tr>
                        <td>@log.DateTimeStamp</td>
                        <td>@log.ServiceName</td>
                        <td>@log.SiteName</td>
                        <td>@log.Description</td>
                    </tr>
                }

            </tbody>
        </table>

    }
    <div class="form-group">
        @Html.LabelFor(model => model.LogEntry, new { @class = "col-md-3", @for = "txtLogEntry" })
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.LogEntry, new { @class = "form-control", @id = "txtLogEntry" })
            @Html.ValidationMessageFor(model => model.LogEntry, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />
    <h3 style='font-weight: bold;'>Bunk Check-In</h3>
    if (Model.HasShelter) {
        if (!Model.BunksAvailable)
        {
            <h4 style = "color:red;">No bunks available </h4>
        }
        else
        {
    <table class="table">
        <thead>
            <tr>
                @if (Model.MaleBunks > 0)
                {
                    <th>Male Bunk</th>
                }
                @if (Model.FemaleBunks > 0)
                {
                    <th>Female Bunk</th>
                }
                @if (Model.MixedBunks > 0)
                {
                    <th>Mixed Bunk</th>
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                @if (Model.MaleBunks > 0)
                {
                <td>@Html.RadioButtonFor(model => model.selectedBunk, "MaleBunksAvailable")</td>
                }
                @if (Model.FemaleBunks > 0)
                {
                <td>@Html.RadioButtonFor(model => model.selectedBunk, "FemaleBunksAvailable")</td>
                }
                @if (Model.MixedBunks > 0)
                {
                <td>@Html.RadioButtonFor(model => model.selectedBunk, "MixedBunksAvailable")</td>
                }
            </tr>
        </tbody>
    </table>
    <div class="form-group">
        @Html.LabelFor(model => model.ShelterLogEntry, new { @class = "col-md-3", @for = "txtShelterLogEntry" })
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.ShelterLogEntry, new { @class = "form-control", @id = "ShelterLogEntry" })
        </div>
    </div>
        }
    } else {
      < h4 style = "color:red;" > Site does not contain shelter</ h4 >
     }

    <br />
    <h3 style='font-weight: bold;'>Food Pantry</h3>
    if (Model.HasFoodPantry)
                {
        <div class="form-group">
            @Html.LabelFor(model => model.FoodPantryCheckIn, new { @class = "col-md-3", @for = "txtFoodPantryLogCheckIn" })
            <div class="col-md-9">
                @Html.CheckBoxFor(model => model.FoodPantryCheckIn, "FoodPantryCheckIn")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FoodPantryLogEntry, new { @class = "col-md-3", @for = "txtFoodPantryLogEntry" })
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.FoodPantryLogEntry, new { @class = "form-control", @id = "PantryLogEntry" })
        </div>
        </div>
    }
    else
    {
        <h4 style="color:red;">Site does not contain food pantry</h4>
    }

    <br />
    <h3 style='font-weight: bold;'>Soup Kitchen</h3>
    if (Model.HasSoupKitchen)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.SoupKitchenCheckIn, new { @class = "col-md-3", @for = "txtSoupKitchenCheckIn" })
            <div class="col-md-9">
                @Html.CheckBoxFor(model => model.SoupKitchenCheckIn, "SoupKitchenCheckIn")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SoupKitchenLogEntry, new { @class = "col-md-3", @for = "txtSoupKitchenLogEntry" })
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.SoupKitchenLogEntry, new { @class = "form-control", @id = "SoupKitchenLogEntry" })
            </div>
        </div>
    }
    else
    {
        <h4 style="color:red;">Site does not contain soup kitchen</h4>
    }
    <div>
        <input type="submit" value="Save changes" class="btn btn-default" />
        @if (!String.IsNullOrWhiteSpace(Model.StatusMessage))
{
    if (Model.StatusMessage == "Succesfully added!")
    {
                <span class="text-success"><b> @Model.StatusMessage</b></span>
            }
            else
            {
                <span class="text-danger"><b> @Model.StatusMessage</b></span>
            }
        }
    </div>
}


    @using (Html.BeginForm("AddToWaitlist", "Client", FormMethod.Post, new { id = "frmAddToWaitlist", @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ClientID)
        <br />
        <h3 style='font-weight: bold;'>Family Room Waitlist</h3>
        if (Model.Waitlist != null && Model.Waitlist.Count() != 0 )
{
        <table class="table">
            <thead>
                <tr>
                    <th>Client ID</th>
                    <th>Site ID</th>
                    <th>Ranking</th>
                </tr>
            </thead>
            <tbody>

                @foreach (Waitlist wt in Model.Waitlist)
                   {
                    <tr>
                        <td>@wt.ClientID</td>
                        <td>@wt.SiteID</td>
                        <td>@wt.Ranking</td>
                    </tr>
                }

            </tbody>
        </table>

        }
        else
        {
            <h4 style="color:red;">Client is not on any waitlists</h4>
        }
        if (Model.AddClientToWaitlistAllowed)
        {
            if (Model.HasShelter)
            {
                <input type="submit" value="Add to Waitlist" class="btn btn-default" />
                if (!String.IsNullOrWhiteSpace(Model.StatusMessage))
                {
                    if (Model.StatusMessage == "Succesfully added to waitlist!")
                    {
                        <span class="text-success"><b> @Model.StatusMessage</b></span>
                    }
                    else
                    {
                        <span class="text-danger"><b> @Model.StatusMessage</b></span>
                    }
                }
            }
            else
            {
                <h4 style="color:red;">Site does not contain shelter</h4>
            }
        }

    }
    <div>
        @Html.ActionLink("Back", "SearchClient", "Client")
    </div>

